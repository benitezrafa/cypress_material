1. npm init (iniciar package de node.js na pasta selecionada)

2. npm install cypress --save-dev (instalar cypress no vscode)

2.1 npm install -g (instalar livraria npx)

2.2. npx cypress install --force (forçar a instalação)

3. node_modules\.bin\cypress open (verificando modulos)

4. npx cypress open (abrir dashboard cypress)

5. parar consola = Ctrl+C

6. Instalar plugin tab
npm install -D cypress-plugin-tab
//Carga la función
require('cypress-plugin-tab')

6.2 Instalar plugin hacer upload archivos
npm install --save-dev cypress-file-upload
// comando para importar el plugin
import 'cypress-file-upload'


6.3 Instalar plugin drag_and_drop
npm install --save-dev @4tw/cypress-drag-drop

//Comando para importar la función
require('@4tw/cypress-drag-drop')

7. línea de comando para ayuda de sintaxis de cypress

/// <reference types="Cypress" />


8. Comando para copiar e colar na linha de baixo
Ctrl + C
Ctrl + v

8.1 Atajo para activar o desactivar líneas de código
Ctrl + ç


9. Instalar plugin X-path
npm install -D cypress-xpath

//Carga la función
require('cypress-xpath')

10. Extension de Chrome:
"https://chromewebstore.google.com/detail/hgimnogjllphhhkhlmebbmlgjoejdpjl?hl=es" = Xpath

11. comandos por consola para ejecutar los testes
node_modules\.bin\cypress run
    o
npx cypress run

12. abrir testes desde el navegador con
npx cypress run --headed
npx cypress run --browser chrome

13. comando para hacer el test en un test especifico
npx cypress run --spec "(navegar nas pastas do projeto)"

14. comando para hacer todos los tests de una sección
npx cypress run --spec "la ruta \*"

15. Para visualizar todos los custom commands en el archivos
/support/commands.js
los custom comandas son importantes para repetir muchas pruebas sin tener que codificarlo paso a paso, con un solo comando se puede hacer miles de pruebas

16. Captura de videos de los test
con el comando: npx cypress run --spec "ruta del test"
se genera un video del test en la carpeta "cypress/videos"

17. Captura de evidencias de los test
con el comando: cy.screenshot("nombre de la captura")
npx cypress run --spec "ruta del test"
se genera una captura de pantalla de los test en la carpeta "cypress/screenshots"

18.Página mockaroo
https://mockaroo.com/
Generador de datos para las pruebas de software: ejemplo de datos de usuarios .json

19.Pagina para converter Excel a JSON
https://beautifytools.com/excel-to-json-converter.php

20. Instalacion de plugin Cucumber
npm install --save-dev cypress-cucumber-preprocessor

21. Instalando Jenkins
https://www.jenkins.io/download/

21.1 Comandos en el prompt de windows:
parar el servicio de jenkins: jenkins stop
iniciar el servicio de jenkins: jenkins start

22. #### Comandos GitHub ####
1 - Inicializar repositorio: git init
2 - Agregar repositorio: git add .
3 - Agregando archivos por extencion: git add *.EXTENCION
4 - Quitar archivos por extencion: git reset *.EXTENCION
5 - // No sé para que sirve: git log --oneline --decorate --all --graph
6 - Alias: git log
7 - //No sé para que sirve con Alias: git config --global alias.lg "log --oneline --decorate --all --graph"
8 - Verificar configuracion de Alias: git config --global -e
9 - Regrecion a un commit en especifico: git reset "--soft o --hard" "id del commit"
10 - Verificar todos los movimientos: git reflog
11 - Crear el archivo para ignorar archivos y no subirlos al repositorio: .gitignore
12 - No subir el archivo: (node_modules)
13 - Verificar status: git status
14 - Verificar logs: git log
15 - Retornar los archivos deleteados: git checkout -- .
16 - Confirmar commit: git commit -m "comentario"
17 - Cambiar de rama: git branch -M main
18 - Subir cambios a la rama: git push
19 - Agregar repositorio remoto: git remote add origin "url del repositorio"
20 - Subir el repositorio a GitHub: git push -u origin main
21 - Bajar cambios de la rama: git pull



23. En cado de no visualizar los testes en el dashboard de cypress, cambiar en el archivo "cypress.config.js":
module.exports = {
  e2e: {
    specPattern: 'cypress/e2e/**/*.cy.{js,jsx,ts,tsx}',
  },
}

